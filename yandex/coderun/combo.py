"""
link: https://coderun.yandex.ru/selections/2024-summer-backend/problems/combo/description

27. Комбо
Интернет-магазин продаёт электронные компоненты. Всего в ассортименте есть n n позиций, i i-й товар стоит a i ai​ монет и находится на складе в неограниченном количестве.

Помимо основных позиций, магазин предлагает специальное комбо из четырёх товаров по выгодной цене X X, меньшей, чем сумма стоимостей всех четырёх товаров по отдельности. Такое комбо можно купить сколько угодно раз.

Имея ваш желаемый список из k k товаров для покупки, выберите оптимальный способ купить все товары (возможно, получив какие-то лишние товары дополнительно).
Формат ввода

В первой строке вводится число n n ( 4 ≤ n ≤ 20 4≤n≤20) — количество товаров в магазине.

Во второй строке через пробел вводится n n чисел a i ai​ ( 1 ≤ a i ≤ 1000 1≤ai​≤1000) — стоимости товаров.

В третьей строке вводится число X X ( 1 ≤ X ≤ 1000 1≤X≤1000) — стоимость комбо.

В четвёртой строке вводится четыре числа b 1 , b 2 , b 3 , b 4 b1​,b2​,b3​,b4​ ( 1 ≤ b i ≤ n 1≤bi​≤n) — номера товаров в комбо. Гарантируется, что все b i bi​ различны.

В пятой строке вводится число k k ( 1 ≤ k ≤ 20 1≤k≤20) — количество желаемых товаров.

В шестой строке через пробел вводится k k чисел c i ci​ ( 1 ≤ c i ≤ n 1≤ci​≤n) — номера желаемых товаров. Заметьте, что c i ci​ не обязаны быть различными между собой.
Формат вывода

Выведите одно число — оптимальную стоимость покупок.
Примечание

В первом тесте из условия комбо стоит 1 монету, а каждый товар по отдельности стоит 1000 монет. Чтобы набрать товары 1, 2, 3, 4 можно взять первое комбо. Затем нужно взять второе комбо, из которого нужен будет только товар номер 1. За 2 комбо нужно будет заплатить 2 монеты.

Во втором тесте из условия товары стоят 1, 2, 3, 4 монет соответственно, а комбо стоит 5 монет. Для того, чтобы купить товары 2 и 4, выгодно взять комбо. Затем докупается еще один товар 4 по обычной цене. Общая стоимость получается равна 5 + 4 = 9 5+4=9 монет.

Пример 1:
Ввод:
4
1000 1000 1000 1000
1
1 2 3 4
5
1 2 3 4 1

Вывод:
2

Пример 2:
Ввод:
4
1 2 3 4
5
1 2 3 4
3
2 4 4


Вывод:
9


Пример 3:
Ввод:
7
10 6 8 9 4 5 3
14
1 2 3 4
5
1 3 4 6 7

Вывод:
22

"""

from collections import Counter


def main():
    n = int(input())
    a = list(map(int, input().split()))

    x = int(input())
    b = list(map(int, input().split()))

    k = int(input())
    c = dict(Counter(list(map(int, input().split()))))

    answer = 0


    print(answer)


if __name__ == '__main__':
    main()